# Generated by Django 2.0.5 on 2018-05-28 22:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import fernet_fields.fields
import uuid
import wallet.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('first_name', models.CharField(max_length=20, verbose_name='First name')),
                ('last_name', models.CharField(max_length=20, verbose_name='Last name')),
                ('email', models.EmailField(max_length=254, primary_key=True, serialize=False, unique=True, verbose_name='Email')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', wallet.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BTCTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('txid', models.CharField(max_length=256, null=True)),
                ('to', models.CharField(max_length=64)),
                ('status', models.NullBooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time')),
                ('type', models.CharField(choices=[('IN', 'IN'), ('OUT', 'OUT')], default='OUT', max_length=3)),
                ('amount', models.DecimalField(decimal_places=8, max_digits=16, null=True)),
                ('fee', models.DecimalField(decimal_places=8, max_digits=16, null=True)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', wallet.models.BTCTransactionManager()),
            ],
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abrev', models.CharField(max_length=3, unique=True)),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='ETHTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('txid', models.CharField(max_length=256, null=True)),
                ('to', models.CharField(max_length=64)),
                ('status', models.NullBooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time')),
                ('type', models.CharField(choices=[('IN', 'IN'), ('OUT', 'OUT')], default='OUT', max_length=3)),
                ('gasPrice', models.DecimalField(decimal_places=18, max_digits=26, null=True)),
                ('gas', models.DecimalField(decimal_places=18, max_digits=26, null=True)),
                ('amount', models.DecimalField(decimal_places=18, max_digits=26, null=True)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', wallet.models.ETHTransactionManager()),
            ],
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Pass', 'Cambio de contrase√±a'), ('Update', 'Updated profile'), ('Security', '2-pass authenticator configurado'), ('TXBTC', 'Transaccion BTC'), ('TXETH', 'Transaccion ETH')], max_length=8, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birthdate', models.DateField(blank=True, null=True, verbose_name='Birthdate')),
                ('address', models.CharField(blank=True, max_length=52, null=True, verbose_name='Address')),
                ('phone', models.CharField(blank=True, max_length=11, null=True, verbose_name='Number phone')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Unknown', 'Unknown')], default='Unknown', max_length=7, null=True, verbose_name='Gender')),
                ('country', django_countries.fields.CountryField(max_length=2, null=True, verbose_name='Country')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Last update')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Value',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('btcvalue', models.DecimalField(decimal_places=4, default=0, max_digits=16)),
                ('ethvalue', models.DecimalField(decimal_places=4, default=0, max_digits=16)),
            ],
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('address', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('private_key', fernet_fields.fields.EncryptedCharField(max_length=64)),
                ('balance', models.DecimalField(decimal_places=8, default=0, max_digits=16)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time')),
                ('block', models.IntegerField(default=0)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='wallet.Currency')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            managers=[
                ('objects', wallet.models.WalletManager()),
            ],
        ),
        migrations.AddField(
            model_name='ethtransaction',
            name='wallet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='wallet.Wallet'),
        ),
        migrations.AddField(
            model_name='btctransaction',
            name='wallet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='wallet.Wallet'),
        ),
    ]
